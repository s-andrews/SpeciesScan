#!/usr/bin/perl
use warnings;
use strict;
use FindBin qw($RealBin);

# This script takes in a GDS search result and for each entry it
# will:
#
# 1) Identify the GSE accession number
# 2) Use this to obtain the list of samples for this series
# 3) Pick the first sample and get its SRX number
# 4) Query ENA for this number to get the SRR identifier
# 5) Construct the download URL for the first read set for this identifer

my ($gds_file) = @ARGV;


open (IN,$gds_file) or die "Can't read $gds_file: $!";

my $outdir = $gds_file;
$outdir =~ s/^.*\///;

$outdir = "$RealBin/../results/$outdir";

system("mkdir -p \"$outdir\"") == 0 or die "Failed to make results folder";

open (OUT,'>',"$outdir/screen_log.txt") or die "Can't write log file: $!";

while (<IN>) {
		chomp;
		next unless ($_);
		my ($id,$title) = split(/\. /,$_,2);

		my %annotation;

		while (<IN>) {
				chomp;
				last unless ($_);

				if (/Series\s+Accession:\s+(\S+)\s+/) {
						$annotation{series} = $1;
				}

				else {
						my ($key,$value) = split(/:\t/);
						$annotation{$key} = $value;
				}
		}

		#next if ($id < 101);

		$annotation{sample_id} = get_first_sample_from_series($annotation{series});

		next unless ($annotation{sample_id});

		$annotation{run_id} = get_run_from_sample($annotation{sample_id});

		next unless ($annotation{run_id});

		($annotation{url},$annotation{run_srr},$annotation{species}) = get_url_from_srx($annotation{run_id});

		next unless ($annotation{url} and $annotation{run_srr} and $annotation{species});

		unless ($annotation{species} eq 'Mus musculus') {
				warn "Skipping non-mouse ($annotation{species})\n";
				next;
		}

	  print OUT join("\t",($id,
												 $annotation{series},
												 $annotation{species},
												 $annotation{sample_id},
												 $annotation{run_id},
												 $annotation{run_srr},
												 $annotation{url},
												 $title)),"\n";

		
		# Get the sequence from the fastq file and save it into the results folder
		#
		# We don't die on failure because things like colorspace data can mess us up
		system("$RealBin/sample_url http://$annotation{url} | gzip -4 > $outdir/${id}_$annotation{run_srr}.fastq.gz") == 0 or do {
				warn "Couldn't write results file for $id";
				next;
		};

		# Run fastq screen on the sequence
		system("fastq_screen --quiet --subset 0 --outdir $outdir $outdir/${id}_$annotation{run_srr}.fastq.gz") == 0 or die "Failed to run fastq_screen on id $id\n";


}

sub get_first_sample_from_series {
		my ($gse) = @_;

		my $command = "wget -qO- http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=$gse\\&targ=self\\&form=text\\&view=quick";


		my $response = `$command`;

		if ($response =~ /Series_sample_id = (GSM\d+)/) {
				return $1;
		}

	 
		warn "No GSM number from $gse\n";

}

sub get_run_from_sample {
		my ($gsm) = @_;

		my $command = "wget -qO- http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=$gsm\\&targ=self\\&form=text\\&view=quick";

		my $response = `$command`;

		if ($response =~ /SRX\d+\/(SRX\d+)/) {
				return $1;
		}

		warn "No SRX number from $gsm\n";

}

sub get_srr_from_srx {

		my ($srx) = @_;

		my $command = "wget -qO- http://www.ebi.ac.uk/ena/data/view/$srx\\&display=xml";

		my $response = `$command`;

		if ($response =~ /<ID>(SRR\d+)<\/ID>/) {
				return $1;
		}

	 
		warn "No SRR number from $srx\n";

}


sub get_url_from_srx {

		my ($srx) = @_;

		my $command = "wget -qO- http://www.ebi.ac.uk/ena/data/warehouse/filereport?accession=$srx\\&result=read_run\\&fields=fastq_ftp,scientific_name\\&download=txt";

		my $response = `$command`;

		my $url;
		my $srr;
		if ($response =~ /(ftp.sra\S+?fastq.gz)/) {
				$url = $1;

				#warn "URL is $url\n";

				if ($url =~ /(SRR\d+)_?\d?\.fastq.gz/) {
					 $srr = $1;

					 #warn "SRR = $1\n";

					 if ($response =~ /fastq\.gz\t([\w\s]+)/) {
							 #warn "Species is $1\n";

							 my $species = $1;
							 chomp($species);
							 return($url,$srr,$species);
					 }
					 else {
							 warn "No species from $srx\n";
					 }

				}
				warn "No SRR from $srx\n";
		}

		warn "No URL from $srx\n";
	 


}





